/*2021年3月19日16:59:16
第三周上机课 

int chess 二维数组表示棋盘
(tr,tc)	  棋盘左上角的行号、列号
(dr,dc)	  特殊方格左上角的行号、列号
size=2^k  棋盘的规格为2^k * 2^k
title      全局变量、骨牌编号 
*/
/*2021年3月21日10:08:32*/
#include<stdio.h>
#include<stdlib.h>
#define MAXSIZE 200
int chess[MAXSIZE][MAXSIZE];
int title=0;
void CoverChess(int tr,int tc,int dr,int dc,int size)
{
	if(size==1)	return ;
	int t=title++;
	int s=size/2;
	//左上方 
	if(dr<tc+s&&dc<tc+s)
	{
		CoverChess(tr,tc,dr,dc,s);
	}
	else
	{
		chess[tr+s-1][tc+s-1]=t;
		CoverChess(tr,tc,tr+s-1,tc+s-1,s);
	}
	//
	if(dr<tr+s&&dc>=tc+s)
	{
		CoverChess(tr,tc+s,dr,dc,s);
	}
	else
	{
		chess[tr+s-1][tc+s]=t;
		CoverChess(tr,tc+s,tr+s-1,tc+s,s);
	}
	
	if(dr>=tr+s&&dc<tc+s)
	{
		CoverChess(tr+s,tc,dr,dc,s);
	}
	else
	{
		chess[tr+s][tc+s-1]=t;
		CoverChess(tr+s,tc,tr+s,tc+s-1,s);
	}
	if(dr>=tr+s&&dc>=tc+s)
	{
		CoverChess(tr+s,tc+s,dr,dc,s);
	}
	else
	{
		chess[tr+s][tc+s]=t;
		CoverChess(tr+s,tc+s,tr+s,tc+s,s);
	}	
}
int main()
{
	int dr,dc;
	int size;
	printf("输入棋盘大小：\n");
	scanf("%d",&size);
	printf("输入特殊格子所在位置\n");
	scanf("%d%d",&dr,&dc);
	
	chess[dr-1][dc-1]=-1;
	CoverChess(0,0,dr-1,dc-1,size);
	for(int i=0;i<size;i++)
	{
			for(int j=0;j<size;j++)
			{
				printf("%4d",chess[i][j]);
			}	
		printf("\n");
	}	
	
	return 0;	
}